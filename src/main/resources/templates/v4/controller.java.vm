package ${package.Controller};

import java.util.HashMap;
import java.util.List;
import java.util.Map;
import javax.annotation.Resource;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

import org.apache.ibatis.annotations.Param;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.ResponseBody;
import org.springframework.web.bind.annotation.RestController;
import org.springframework.web.bind.annotation.RequestMethod;
import com.zhjs.framework.models.base.vo.PagerResult;
import com.zhjs.framework.models.base.vo.ResponseBean;
import io.swagger.annotations.Api;
import io.swagger.annotations.ApiOperation;
import com.zhjs.framework.models.util.ReqResUtil;
import javax.validation.Valid;

import ${package.Mapper}.${table.mapperName};
//import ${package.Service}.${table.serviceName};
import ${package.Entity}.${entity};

#if(${restControllerStyle})
import org.springframework.web.bind.annotation.RestController;
#else
import org.springframework.stereotype.Controller;
#end
#if(${superControllerClassPackage})
import ${superControllerClassPackage};
#end

/**
 * <p>
 * $!{table.comment} 前端控制器
 * </p>
 *
 * @author ${author}
 * @since ${date}
 */
#if(${restControllerStyle})
@RestController
#else
@tController
#end
@Api(tags = "$!{table.comment}")
@RequestMapping("#if(${package.ModuleName})/${package.ModuleName}#end/#if(${controllerMappingHyphenStyle})${controllerMappingHyphen}#else${table.entityPath}#end")
#if(${kotlin})
class ${table.controllerName}#if(${superControllerClass}) : ${superControllerClass}()#end

#else
#if(${superControllerClass})
public class ${table.controllerName} extends ${superControllerClass} {
#else
public class ${table.controllerName} {
#end

	//@Resource
	//private ${table.mapperName} mapper;
	@Resource
	private ${table.serviceName} ${table.entityPath}Service;
	@Resource
	private ${entity}Transfer transfer;
	
	/**
	 * 新增
	 * @author ${author}
	 * Create in ${date}
	 */
	@ApiOperation("新增")
	@RequestMapping(value="/add", method = RequestMethod.POST)
	public ResponseBean<Boolean> add(@Valid @RequestBody ${entity}AddDto dto) {
		${entity} item = transfer.addOrUpdateDto2${entity}(dto);
		${table.entityPath}Service.addOrUpdate(item);
		
		return ReqResUtil.getResponseBean(true);
	}
	
	/**
	 * 修改
	 * @author ${author}
	 * Create in ${date}
	 */
	@ApiOperation("修改")
	@RequestMapping(value="/update", method = RequestMethod.POST)
	public ResponseBean<Boolean> update(@Valid @RequestBody ${entity}UpdateDto dto) {
		${entity} item = transfer.addOrUpdateDto2${entity}(dto);
		${table.entityPath}Service.addOrUpdate(item);
		
		return ReqResUtil.getResponseBean(true);
	}
	
	/**
	 * 列表
	 * @author ${author}
	 * Create in ${date}
	 */
	@ApiOperation("列表")
	@RequestMapping(value="/getList", method = RequestMethod.POST)
//	@ResponseBody
	public ResponseBean<PagerResult<${entity}Vo>> getList(@RequestBody ${entity}ByPageDto dto) {

		PagerResult<${entity}Vo> result = ${table.entityPath}Service.getList(dto);
		
		return ReqResUtil.getResponseBean(result);
	}

	/**
	 * 通过id获取
	 * @author ${author}
	 * Create in ${date}
	 */
	@ApiOperation("通过id获取")
	@RequestMapping(value="/getById", method = RequestMethod.POST)
	public ResponseBean<${entity}Vo> getById(@Valid @RequestBody ${entity}IdDto dto) {
		
		${entity} item = ${table.entityPath}Service.getById(dto.getId());
		${entity}Vo vo = transfer.${table.entityPath}2Vo(item);
		
		return ReqResUtil.getResponseBean(vo);
	}



	
	
}

#end