package ${package.Controller};

import java.util.HashMap;
import java.util.List;
import java.util.Map;
import javax.annotation.Resource;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

import org.apache.ibatis.annotations.Param;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.ResponseBody;
import org.springframework.web.bind.annotation.RestController;
import org.springframework.web.bind.annotation.RequestMethod;
import com.jinyafu.base.code.utils.BeanUtil;
import com.jinyafu.base.common.dto.BaseCommonReqDTO;
import com.jinyafu.base.common.dto.BaseResponseDTO;
import com.jinyafu.base.common.dto.BaseResponsePageData;
import javax.validation.Valid;

import ${package.Mapper}.${table.mapperName};
import ${package.Service}.${table.serviceName};
import ${package.Entity}.${entity};

#if(${restControllerStyle})
import org.springframework.web.bind.annotation.RestController;
#else
import org.springframework.stereotype.Controller;
#end
#if(${superControllerClassPackage})
import ${superControllerClassPackage};
#end

/**
 * <p>
 * $!{table.comment} 前端控制器
 * </p>
 * @Copyright 深圳金雅福控股集团有限公司
 * @author ${author}
 * @since ${date}
 * @Version: 1.0
 */
#if(${restControllerStyle})
@RestController
#else
@tController
#end
@RequestMapping("#if(${package.ModuleName})/${package.ModuleName}#end/#if(${controllerMappingHyphenStyle})${controllerMappingHyphen}#else${table.entityPath}#end")
#if(${kotlin})
class ${table.controllerName}#if(${superControllerClass}) : ${superControllerClass}()#end

#else
#if(${superControllerClass})
public class ${table.controllerName} extends ${superControllerClass} {
#else
public class ${table.controllerName} {
#end

	@Resource
	private ${table.serviceName} ${table.entityPath}Service;
	
	
	/**
	 * @Description: 新增，修改$!{table.comment}
	 * @Copyright 深圳金雅福控股集团有限公司
	 * @author ${author}
	 * @Date ${date}
	 * @Version: 1.0
	 */
	@RequestMapping(value="/addOrUpdate${entity}", method = RequestMethod.POST)
	public BaseResponseDTO<Boolean> addOrUpdate${entity}(@Valid @RequestBody ${entity}ReqDTO dto) {
		${entity} item = new ${entity}();
		BeanUtil.copy(dto, item);
		${table.entityPath}Service.addOrUpdate${entity}(item);
		
		return BaseResponseDTO.success();
	}
	
	/**
	 * @Description: 获取$!{table.comment}列表
	 * @Copyright 深圳金雅福控股集团有限公司
	 * @author ${author}
	 * @Date ${date}
	 * @Version: 1.0
	 */
	@RequestMapping(value="/get${entity}List", method = RequestMethod.POST)
	public BaseResponseDTO<BaseResponsePageData<${entity}ResDTO>> get${entity}List(@RequestBody ${entity}ReqDTO dto) {

		BaseResponsePageData<${entity}ResDTO> result = ${table.entityPath}Service.get${entity}List(dto);
		
		return BaseResponseDTO.success(result);
	}

	/**
	 * @Description: 通过id获取$!{table.comment}详情
	 * @Copyright 深圳金雅福控股集团有限公司
	 * @author ${author}
	 * @Date ${date}
	 * @Version: 1.0
	 */
	@RequestMapping(value="/get${entity}ById", method = RequestMethod.POST)
	public BaseResponseDTO<${entity}ResDTO> get${entity}ById(@Valid @RequestBody BaseCommonReqDTO dto) {
		
		${entity} item = ${table.entityPath}Service.getById(dto.getId());
		${entity}ResDTO vo = new ${entity}ResDTO();
		BeanUtil.copy(item, vo);
		
		return BaseResponseDTO.success(vo);
	}
	
	/**
	 * 设置$!{table.comment}排序
	 * @version ${date}
	 * @author zhouzj
	 * @param dto
	 * @return
	 */
	@RequestMapping(value="/set${entity}Sort", method = RequestMethod.POST)
	public BaseResponseDTO<Boolean> set${entity}Sort(@Valid @RequestBody CommonSortReqDTO dto) {
		
		${table.entityPath}Service.set${entity}Sort(dto.getId(), dto.getSort());
		
		return BaseResponseDTO.success(true);
	}
	
	/**
	 * 设置$!{table.comment} 启用体用状态
	 * @version ${date}
	 * @author zhouzj
	 * @param dto
	 * @return
	 */
	@RequestMapping(value="/set${entity}Status", method = RequestMethod.POST)
	public BaseResponseDTO<Boolean> set${entity}Status(@Valid @RequestBody BaseCommonReqDTO dto) {
		
		${table.entityPath}Service.set${entity}Status(dto.getId());
		
		return BaseResponseDTO.success(true);
	}
	
	
	/**
	 * 通过id 删除对应的$!{table.comment}数据
	 * @version ${date}
	 * @author zhouzj
	 * @param dto
	 * @return
	 */
	@RequestMapping(value="/delete${entity}ById", method = RequestMethod.POST)
	public BaseResponseDTO<Boolean> delete${entity}ById(@Valid @RequestBody BaseCommonReqDTO dto) {
		
		${table.entityPath}Service.delete${entity}ById(dto.getId());
		
		return BaseResponseDTO.success(true);
	}



	
	
}

#end